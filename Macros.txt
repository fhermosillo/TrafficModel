/* ADD2GIT */
%SCRIPT
// alert(str), information(str), warning(str) or critical(str)	
// Get workdir
filename = editor.fileName()
workdir=filename.substring(0, filename.lastIndexOf("/"))
projname=workdir.substring(workdir.lastIndexOf("/")+1)

// Dialog
dialog = new UniversalInputDialog()
dialog.setWindowTitle("Creating new GitHub repository")
dialog.add("USERNAME", "Username", "username")
//dialog.add(projname, "Repo Name", "reponame")
if (dialog.exec() == 1) {
	//reponame=dialog.get("reponame")
	reponame=projname
	username=dialog.get("username")
	// Login to Github & create new repo
	cmd=system("cmd /c \"gh auth login --with-token < github-token.key\"")
	cmd.waitForFinished()
	cmd=system("gh repo create " + "\"" + reponame + "\" --public -y")
	cmd.waitForFinished()
	// Remove folder
	cmd=system("cmd /c \"IF EXIST " + reponame + " (@RD /S /Q " + reponame + ")\"")
	cmd.waitForFinished()
	
	//
	dialog = new UniversalInputDialog()
	dialog.setWindowTitle("Add first content to " + reponame)
	dialog.add("Committed by TeXstudio", "Comment", "comment")
	dialog.add("master", "Branch", "branch")
	if (dialog.exec() == 1) {
		msg=dialog.get("comment")
		branch=dialog.get("branch")
		
		// Add to github
		cmd=system("git init")
		cmd.waitForFinished()
		cmd=system("git add .")
		cmd.waitForFinished()
		cmd=system("git reset github-token.key")
		cmd.waitForFinished()
		//cmd=system("git status")
		//cmd.waitForFinished()
		cmd=system("git commit -m \"" + msg + "\"")
		cmd.waitForFinished()
		cmd=system("git remote add origin \"https://github.com/" + username + "/" + reponame + ".git\"")
		cmd.waitForFinished()
		cmd=system("git push -u origin " + "\"" + branch + "\"")
		cmd.waitForFinished()
	}
}



/* PUSH2GIT MACRO */
%SCRIPT
/* push2git */
// Trigger ?save-file

// Get workdir
filename = editor.fileName()
workdir = filename.substring(0, filename.lastIndexOf("/"))
reponame=workdir.substring(workdir.lastIndexOf("/")+1)

// Dialog
dialog = new UniversalInputDialog()
dialog.setWindowTitle("Commit + push into the " + reponame + " repository")
dialog.add(false, "Tex Differences", "texdiff")
dialog.add("Committed by TeXstudio", "Comment", "comment")
dialog.add("master", "Branch", "branch")

if (dialog.exec() == 1) {
	// Add tex differences
	if ( dialog.get("texdiff") == true)
	{
		cmd=system("\"" + workdir+"/texdiff.bat\"")
		cmd.waitForFinished()
		buildManager.runCommand("pdflatex diff.tex")
		cmd=system("\"" + workdir + "/copyfiles.bat\"")
		cmd.waitForFinished()
	}
	
	// Commit + Push
	comment = dialog.get("comment")
	branch = dialog.get("branch")
	
	cmd=system("git add .")
	cmd.waitForFinished()
	cmd=system("git reset github-token.key")
	cmd.waitForFinished()
	cmd=system("git commit -a -m \"" + comment + "\"")
	cmd.waitForFinished()
	cmd=system("git pull")
	cmd.waitForFinished()
	cmd=system("git push origin \"" + branch +"\"")
	cmd.waitForFinished()
}


/* RMGIT */
%SCRIPT
// Get workdir
filename = editor.fileName()
workdir=filename.substring(0, filename.lastIndexOf("/"))
reponame=workdir.substring(workdir.lastIndexOf("/")+1)

// Dialog
dialog = new UniversalInputDialog()
dialog.setWindowTitle("Removing GitHub repository")
dialog.add("USERNAME", "Username", "username" );

if (dialog.exec() == 1) {
	if(confirm("Are you sure removing " + reponame + "?"))
	{
		strtoken=readFile("github-token.key")
		username=dialog.get("username")
		cmd=system("cmd /c \"curl -H \"Authorization: token " + strtoken + "\" -X \"DELETE\" https://api.github.com/repos/" + username + "/" + reponame + "\"")	
		cmd.waitForFinished()
		
		// Remove .git folder
		cmd=system("remove.bat \".git\"")
		cmd.waitForFinished()
	}
}